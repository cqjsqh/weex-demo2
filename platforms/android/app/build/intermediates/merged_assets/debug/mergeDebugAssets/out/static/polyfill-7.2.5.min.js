function Set(){this.values={};this.length=0;this.add.apply(this,arguments)}Set.prototype.add=function(){for(var i=0,len=arguments.length;i<len;i++){var val=arguments[i];var str=Set._valToStr(val);if(!this.values.hasOwnProperty(str)){this.values[str]=val;this.length++}}};Set.prototype.get=function(index){if(isNaN(parseFloat(index))||!isFinite(index)||index>=this.length){return undefined}for(var s in this.values){if(this.values.hasOwnProperty(s)){if(index==0){return this.values[s]}index--}}return this};Set.prototype.remove=function(){for(var i=0,len=arguments.length;i<len;i++){var str=Set._valToStr(arguments[i]);if(this.values.hasOwnProperty(str)){delete this.values[str];this.length--}}return this};Set.prototype.contains=function(value){return this.values.hasOwnProperty(Set._valToStr(value))};Set.prototype.size=function(){return this.length};Set.prototype.foreach=function(f,context){for(var s in this.values){if(this.values.hasOwnProperty(s)){f.call(context,this.values[s])}}};Set.prototype.equals=function(that){if(this==that){return true}if(!(that instanceof Set)){return false}if(this.size()!=that.size()){return false}try{this.foreach(function(v){if(!(that.contains(v))){throw false}})}catch(e){if(e===false){return false}throw e}};Set._valToStr=function(value){switch(value){case undefined:return"undefined";case null:return"null";case true:return"true";case false:return"false";default:switch(typeof value){case"number":return"number"+value;case"string":return"string"+value;default:return"@"+objectId(value)}}function objectId(o){var prop="|objectid|";if(!o.hasOwnProperty(prop)){o[prop]=Set._valToStr.next++}return o[prop]}};Set._valToStr.next=0;